TODO LoroEDI
$Id$

- Preparar los proyectos "incluidos" como archivos *.lar en la
  distribución del sistema.  (Ver opción "instalar")
	  
- (?) Permitir más de un guión para cada proyecto.
	  
- Al compilar proyecto, despachar las posible lista de errores.
  La idea es mantener un sólo error por unidad, pero si varias
  unidades tienen problemas, entonces sí permitir abrir los editores
  correspondientes. Puede ser así: si sólo una unidad tiene problema,
  entonces abrir automáticamente su editor; si son varias unidades
  con errores, entonces disponer de un componente gráfico con la
  lista, y desde allí permitir abrir los editores deseados.
	
- Abrir editor ante error de ejecución 
	
- Opciones para imprimir: diagrama, código fuente.
	  
- Hacer más flexible manejo de oro-loaders:
	cambiar orden de busqueda, quitar, etc.
		
	Workspace.{compileProjectModel, compileUnit, executeAlgorithm}
	hacen compiler.ponDirectorioDestino(prj_dir.getAbsolutePath()); pero
	en el caso de executeAlgorithm esto es para hacer que el directorio
	se incluya en *busqueda*. El punto es que esto también estaría
	incluido en un rediseño del esquema de búsqueda general.

- Renovar/reasignar íconos de la GUI.
		
- Asociar un "grado de complejidad" a cada proyecto de manera que se
  puedan mostrar esta información al usuario cuando quiera instalar/abrir
  un proyecto. Podría ser algo como "bajo", "intermedio", "alto".
	  
- hacer Manejo del atributo "millis" en unidad compilada. Esto para
  poder comparar entre archivo fuente y archivo compilado: el
  fuente leyendo lastModified del archivo, y la unidad compilada
  leyendo su "millis"


