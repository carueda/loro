package loro.tipo;

///////////////////////////////////////////////////////////
/**
 * Tipo nulo
 */
class TipoNulo extends Tipo
{
	//////////////////////////////////////////////////////////////////////
	private TipoNulo() {}


	//////////////////////////////////////////////////////////////////////
	public boolean esNulo()
	{
		return true;
	}

	//////////////////////////////////////////////////////////////////////
	public boolean igual(Tipo t)
	{
		return t instanceof TipoNulo;
	}

	//////////////////////////////////////////////////////////
	/**
	 * Dice si este tipo es convertible al tipo dado.
	 */
	public boolean esConvertibleA(Tipo t)
	{
		return t instanceof TipoClase
			|| t instanceof TipoArreglo
			|| t instanceof TipoCadena
			|| igual(t)
		;
	}

	//////////////////////////////////////////////////////////////////////
	public Object obtValorDefecto()
	{
		return null;
	}

	//////////////////////////////////////////////////////////////////////
	public String toString()
	{
		return "(tipo nulo)";
	}

	/** Mi unica instancia */
	private static final Tipo instancia = new TipoNulo();

	//////////////////////////////////////////////////////////////////////
	static Tipo obtInstancia()
	{
		return instancia;
	}

	//////////////////////////////////////////////////////////////////////
	private Object readResolve()
	throws java.io.ObjectStreamException
	{
		return instancia;
	}
}